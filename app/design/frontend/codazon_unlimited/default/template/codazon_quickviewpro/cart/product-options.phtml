<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2017 X.commerce, Inc. and affiliates (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php $_helper = $this->helper('catalog/output'); ?>
<?php $_product = $this->getProduct(); ?>
<?php echo $this->getChildHtml('product_custom_script'); ?>
<?php echo $this->getChildHtml('qv_product_custom_script_before'); ?>

<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->toHtml() ?></div>
<div class="product-view product-view-style-02">
    <div class="product-main">
        <div class="product-essential product-main-top">
            <form action="<?php echo $this->getSubmitUrl($_product, array('_secure' => $this->_isSecure())) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
                <?php echo $this->getBlockHtml('formkey') ?>
                <div class="no-display">
                    <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
                    <input type="hidden" name="related_product" id="related-products-field" value="" />
                </div>
                <div class="row product-info-main full-width">
                    <div class="product-col product-right col-sm-12 col-sm-pull-right">
                        <div class="product-img-box">
                            <?php echo $this->getChildHtml('media') ?>
                        </div>
                    </div>
                    <div class="product-col product-left col-sm-12">
                        <div class="product-shop">
                            <div class="action-title"><?php echo $this->__('Please seclect options for') ?></div>
                            <div class="product-name">
                                <span class="h1"><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></span>
                            </div>
                            <div class="extra-info">
                                <div class="product-sku">
                                    <strong class="type"><?= $this->__('SKU') ?></strong>
                                    <div class="value" itemprop="sku"><?= $_product->getSku(); ?></div>
                                </div>
                                <?php echo $this->getChildHtml('product_type_availability'); ?>
                            </div>

                            <?php echo $this->getChildHtml('alert_urls') ?>

                            <?php echo $this->getChildHtml('other'); ?>

                            <div class="price-info">
                                <?php echo $this->getPriceHtml($_product); ?>
                                <?php echo $this->getChildHtml('bundle_prices') ?>
                                <?php echo $this->getTierPriceHtml() ?>
                            </div>
                            
                            <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
                            <?php endif;?>
                        </div>

                        <div class="add-to-cart-wrapper">
                            <?php echo $this->getChildHtml('product_type_data') ?>
                            <?php echo $this->getChildHtml('extrahint') ?>
                            <?php if (!$this->hasOptions()):?>
                                <div class="add-to-box">
                                    <?php if($_product->isSaleable()): ?>
                                        <?php echo $this->getChildHtml('addtocart') ?>
                                    <?php endif; ?>
                                </div>
                                <?php echo $this->getChildHtml('extra_buttons') ?>
                            <?php endif; ?>
                        </div>
                    </div>
                </div>
                
                <div class="clearer"></div>
                <?php if ($_product->isSaleable() && $this->hasOptions()):?>
                    <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
                <?php endif;?>
            </form>
            <script type="text/javascript">
            //<![CDATA[
                var productAddToCartForm = new VarienForm('product_addtocart_form');
                productAddToCartForm.submit = function(button, url) {
                    if (this.validator.validate()) {
                        var form = this.form;
                        var oldUrl = form.action;

                        if (url) {
                           form.action = url;
                        }
                        var e = null;
                        try {
                            this.form.submit();
                        } catch (e) {
                        }
                        this.form.action = oldUrl;
                        if (e) {
                            throw e;
                        }

                        if (button && button != 'undefined') {
                            button.disabled = true;
                        }
                    }
                }.bind(productAddToCartForm);

                productAddToCartForm.submitLight = function(button, url){
                    if(this.validator) {
                        var nv = Validation.methods;
                        delete Validation.methods['required-entry'];
                        delete Validation.methods['validate-one-required'];
                        delete Validation.methods['validate-one-required-by-name'];
                        // Remove custom datetime validators
                        for (var methodName in Validation.methods) {
                            if (methodName.match(/^validate-datetime-.*/i)) {
                                delete Validation.methods[methodName];
                            }
                        }

                        if (this.validator.validate()) {
                            if (url) {
                                this.form.action = url;
                            }
                            this.form.submit();
                        }
                        Object.extend(Validation.methods, nv);
                    }
                }.bind(productAddToCartForm);
            //]]>
            </script>
        </div>
    </div>
    <?php echo $this->getChildHtml('product_additional_data') ?>
</div>

<?php echo $this->getChildHtml('qv_product_custom_script_after'); ?>